# -*- coding: utf-8 -*-
"""export_final.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JYjNqCs0zIKkENISK-4FFZ1fcU9so5cg
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, precision_score, recall_score, f1_score
from imblearn.pipeline import Pipeline
from imblearn.over_sampling import SMOTE
import joblib
import os


df = pd.read_csv('/content/cleaned_heart_disease.csv')

# Filter out rows where the target variable '13' has only one instance
df = df[df['13'] != 13]

X = df.drop('13', axis=1)
y = df['13']

print("Feature columns:", X.columns.tolist())


X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)


pipeline = Pipeline([
    ('scaler', StandardScaler()),
    ('smote', SMOTE(random_state=42)),
    ('model', RandomForestClassifier(
        max_depth=20,
        min_samples_split=5,
        n_estimators=100,
        random_state=42,
        class_weight='balanced'
    ))
])


pipeline.fit(X_train, y_train)


y_pred = pipeline.predict(X_test)

print("✅ Final Model Evaluation on Test Set:")
print(f"Accuracy: {accuracy_score(y_test, y_pred):.4f}")
print(classification_report(y_test, y_pred))
print(f"Precision (macro): {precision_score(y_test, y_pred, average='macro'):.4f}")
print(f"Recall (macro): {recall_score(y_test, y_pred, average='macro'):.4f}")
print(f"F1 Score (macro): {f1_score(y_test, y_pred, average='macro'):.4f}")


os.makedirs('./models', exist_ok=True)
joblib.dump(pipeline, './models/best_model_pipeline.pkl')
print("✅ Pipeline model saved successfully!")


from google.colab import files
files.download('./models/best_model_pipeline.pkl')